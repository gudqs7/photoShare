<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.photo.dao.IdCardMapper" >
  <resultMap id="BaseResultMap" type="cn.photo.entity.IdCard" >
    <id column="cid" property="cid" jdbcType="OTHER" />
    <result column="userid" property="userid" jdbcType="OTHER" />
    <result column="cardno" property="cardno" jdbcType="OTHER" />
    <result column="realname" property="realname" jdbcType="OTHER" />
    <result column="cardfront" property="cardfront" jdbcType="OTHER" />
    <result column="cardverso" property="cardverso" jdbcType="OTHER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    cid, userid, cardno, realname, cardfront, cardverso
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="map" >
    select
    <if test="example.distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from IDCard
    <if test="example != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null" >
      order by ${example.orderByClause}
    </if>
    limit #{first},#{max}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from IDCard
    where cid = #{cid,jdbcType=OTHER}
  </select>
  
  <select id="selectByUid" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from IDCard
    where userid = #{uid,jdbcType=OTHER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from IDCard
    where cid = #{cid,jdbcType=OTHER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.photo.entity.IdCardExample" >
    delete from IDCard
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.photo.entity.IdCard" >
    insert into IDCard (cid, userid, cardno, 
      realname, cardfront, cardverso
      )
    values (#{cid,jdbcType=OTHER}, #{userid,jdbcType=OTHER}, #{cardno,jdbcType=OTHER}, 
      #{realname,jdbcType=OTHER}, #{cardfront,jdbcType=OTHER}, #{cardverso,jdbcType=OTHER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.photo.entity.IdCard" >
    insert into IDCard
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cid != null" >
        cid,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="cardno != null" >
        cardno,
      </if>
      <if test="realname != null" >
        realname,
      </if>
      <if test="cardfront != null" >
        cardfront,
      </if>
      <if test="cardverso != null" >
        cardverso,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cid != null" >
        #{cid,jdbcType=OTHER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=OTHER},
      </if>
      <if test="cardno != null" >
        #{cardno,jdbcType=OTHER},
      </if>
      <if test="realname != null" >
        #{realname,jdbcType=OTHER},
      </if>
      <if test="cardfront != null" >
        #{cardfront,jdbcType=OTHER},
      </if>
      <if test="cardverso != null" >
        #{cardverso,jdbcType=OTHER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="map" resultType="java.lang.Integer" >
    select count(*) from IDCard
    <if test="example != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update IDCard
    <set >
      <if test="record.cid != null" >
        cid = #{record.cid,jdbcType=OTHER},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=OTHER},
      </if>
      <if test="record.cardno != null" >
        cardno = #{record.cardno,jdbcType=OTHER},
      </if>
      <if test="record.realname != null" >
        realname = #{record.realname,jdbcType=OTHER},
      </if>
      <if test="record.cardfront != null" >
        cardfront = #{record.cardfront,jdbcType=OTHER},
      </if>
      <if test="record.cardverso != null" >
        cardverso = #{record.cardverso,jdbcType=OTHER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update IDCard
    set cid = #{record.cid,jdbcType=OTHER},
      userid = #{record.userid,jdbcType=OTHER},
      cardno = #{record.cardno,jdbcType=OTHER},
      realname = #{record.realname,jdbcType=OTHER},
      cardfront = #{record.cardfront,jdbcType=OTHER},
      cardverso = #{record.cardverso,jdbcType=OTHER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.photo.entity.IdCard" >
    update IDCard
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=OTHER},
      </if>
      <if test="cardno != null" >
        cardno = #{cardno,jdbcType=OTHER},
      </if>
      <if test="realname != null" >
        realname = #{realname,jdbcType=OTHER},
      </if>
      <if test="cardfront != null" >
        cardfront = #{cardfront,jdbcType=OTHER},
      </if>
      <if test="cardverso != null" >
        cardverso = #{cardverso,jdbcType=OTHER},
      </if>
    </set>
    where cid = #{cid,jdbcType=OTHER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.photo.entity.IdCard" >
    update IDCard
    set userid = #{userid,jdbcType=OTHER},
      cardno = #{cardno,jdbcType=OTHER},
      realname = #{realname,jdbcType=OTHER},
      cardfront = #{cardfront,jdbcType=OTHER},
      cardverso = #{cardverso,jdbcType=OTHER}
    where cid = #{cid,jdbcType=OTHER}
  </update>
</mapper>